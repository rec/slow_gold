package rec.command;

import "rec/data/proto/Address.proto";

message Description {
  repeated string menu = 1;  // Menu descriptions, which might cycle.
  optional string full = 2;  // Longer description, when editing.
  optional string help = 3;  // Full help text for the command.
};

// A list of commands that the user can issue.
message Command {
  enum Type {
    NONE = 0;

    ADD_LOOP_POINT = 1;
    AUDIO_PREFERENCES = 2;

    CLEAR_NAVIGATOR = 3;
    CLEAR_LOOPS = 4;
    CLEAR_SAVED_FILE_DATA = 5;
    CLOSE_FILE = 6;

    DIM_VOLUME_TOGGLE = 7;

    EJECT_CDS = 8;

    INVERT_LOOP_SELECTION = 9;

    JUMP = 10;
    JUMP_SELECTED  = 11;

    KEYBOARD_MAPPINGS = 12;

    MIDI_MAPPINGS = 13;
    MUTE_VOLUME_TOGGLE = 14;

    NUDGE_BEGIN_LEFT = 15;
    NUDGE_BEGIN_RIGHT = 16;
    NUDGE_END_LEFT = 17;
    NUDGE_END_RIGHT = 18;
    NUDGE_VOLUME_DOWN = 19;
    NUDGE_VOLUME_UP = 20;

    OPEN = 21;

    RECENT_FILES = 22;
    REDO = 23;
    RESET_GAIN_TO_UNITY = 24;

    SELECT = 25;
    SELECT_ONLY = 26;

    TOGGLE_GRID_DISPLAY = 27;
    TOGGLE_SELECTION = 41;
    TOGGLE_START_STOP = 28;
    TOGGLE_STRETCH_ENABLE = 29;
    TOGGLE_WHOLE_SONG_LOOP = 30;
    TREE_CLOSE = 31;
    TREE_DOWN = 32;
    TREE_LEFT = 33;
    TREE_OPEN = 34;
    TREE_RIGHT = 35;
    TREE_UP = 36;

    UNDO = 37;
    UNSELECT = 38;

    ZOOM_IN = 39;
    ZOOM_OUT = 40;

    LAST_COMMAND = 41;

    // Pre-defined by Juce.
    QUIT = 0x1001;
    DEL = 0x1002;
    CUT = 0x1003;
    COPY = 0x1004;
    PASTE = 0x1005;
    SELECT_ALL = 0x1006;
    DESELECT_ALL = 0x1007;

    LAST_TYPE = 40;
    JUCE_START = 0x1001;
    JUCE_END = 0x1007;

    BANK_SIZE = 100000;
  };

  optional Type type = 1;
  optional sint32 index = 2;  // For repeating commands.

  optional string category = 3;  // English language category.
  optional Description desc = 4;  // Localized descriptions.
  repeated string keypress = 5;   // In Juce keyboard format.

  optional bool is_setter = 6;
  optional bool is_global_setter = 7;
  optional data.AddressProto address = 8;
  optional string setter_type_name = 9;
};

message Commands {
  repeated Command command = 1;
};

message KeyValue {
  optional string key = 1;
  optional string value = 2;
};

message Mapping {
  repeated KeyValue key_value = 1;
};