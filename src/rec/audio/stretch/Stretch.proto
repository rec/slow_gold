package rec.audio.stretch;

import "rec/audio/source/Stereo.proto";

// Describe how exactly to apply the timescaler to a sample.
message Stretch {
  optional bool disabled = 15           [default = false];
  optional bool passthrough_when_disabled = 16 [default = true];

  optional double time_scale = 1        [default = 1.0];
  optional double time_percent = 14     [default = 100.0];
  optional double sample_rate = 2       [default = 44100.0];
  optional uint32 channels = 3          [default = 2];
  optional double pitch_scale = 4       [default = 1.0];
  optional double semitone_shift = 5    [default = 0.0];
  optional double detune_cents = 6      [default = 0.0];

  optional uint32 bands = 7             [default = 2048];
  optional uint32 filter_overlap = 8    [default = 1];
  optional uint32 chunk_size = 9        [default = 1024];

  // How many samples must we prefill before we consider a buffer ready to go?
  optional uint32 prefill_size = 10     [default = 15000];

  // How many samples must we have before we're willing to switch to filling the
  // next buffer?
  optional uint32 next_buffer_fill_size = 11 [default = 15000];

  // How long does our thread wait when it believes it has nothing to do?  -1
  // means "wait forever".  That *should* work but if our threading is a little
  // wonky, might occasionally deadlock.  The only cost of setting this to a
  // positive number is a tiny threading overhead - we'll do that for the
  // release but right now set it to -1 to reveal any issues.
  optional int32 inactive_wait_time = 12  [default = -1];

  optional uint32 thread_priority = 13   [default = 4];
};

message Loop {
  optional double begin = 1;
  optional double end = 2;
};

message StretchLoop {
  optional Stretch stretch = 1;
  optional Loop loop = 2;
};