// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rec/slow/AppLayout.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace slow {

namespace {

const ::google::protobuf::Descriptor* AppLayout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppLayout_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rec_2fslow_2fAppLayout_2eproto() {
  protobuf_AddDesc_rec_2fslow_2fAppLayout_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rec/slow/AppLayout.proto");
  GOOGLE_CHECK(file != NULL);
  AppLayout_descriptor_ = file->message_type(0);
  static const int AppLayout_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, directory_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, waveform_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, stretchy_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, clock_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, songdata_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, loops_x_),
  };
  AppLayout_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppLayout_descriptor_,
      AppLayout::default_instance_,
      AppLayout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppLayout, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppLayout));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rec_2fslow_2fAppLayout_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppLayout_descriptor_, &AppLayout::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rec_2fslow_2fAppLayout_2eproto() {
  delete AppLayout::default_instance_;
  delete AppLayout_reflection_;
}

void protobuf_AddDesc_rec_2fslow_2fAppLayout_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::rec::gui::protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030rec/slow/AppLayout.proto\022\010rec.slow\032\026re"
    "c/gui/Geometry.proto\"~\n\tAppLayout\022\023\n\013dir"
    "ectory_y\030\001 \001(\r\022\022\n\nwaveform_y\030\002 \001(\r\022\022\n\nst"
    "retchy_y\030\003 \001(\r\022\017\n\007clock_x\030\004 \001(\r\022\022\n\nsongd"
    "ata_x\030\005 \001(\r\022\017\n\007loops_x\030\006 \001(\r", 188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rec/slow/AppLayout.proto", &protobuf_RegisterTypes);
  AppLayout::default_instance_ = new AppLayout();
  AppLayout::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rec_2fslow_2fAppLayout_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rec_2fslow_2fAppLayout_2eproto {
  StaticDescriptorInitializer_rec_2fslow_2fAppLayout_2eproto() {
    protobuf_AddDesc_rec_2fslow_2fAppLayout_2eproto();
  }
} static_descriptor_initializer_rec_2fslow_2fAppLayout_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int AppLayout::kDirectoryYFieldNumber;
const int AppLayout::kWaveformYFieldNumber;
const int AppLayout::kStretchyYFieldNumber;
const int AppLayout::kClockXFieldNumber;
const int AppLayout::kSongdataXFieldNumber;
const int AppLayout::kLoopsXFieldNumber;
#endif  // !_MSC_VER

AppLayout::AppLayout()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AppLayout::InitAsDefaultInstance() {
}

AppLayout::AppLayout(const AppLayout& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AppLayout::SharedCtor() {
  _cached_size_ = 0;
  directory_y_ = 0u;
  waveform_y_ = 0u;
  stretchy_y_ = 0u;
  clock_x_ = 0u;
  songdata_x_ = 0u;
  loops_x_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppLayout::~AppLayout() {
  SharedDtor();
}

void AppLayout::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppLayout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppLayout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppLayout_descriptor_;
}

const AppLayout& AppLayout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rec_2fslow_2fAppLayout_2eproto();  return *default_instance_;
}

AppLayout* AppLayout::default_instance_ = NULL;

AppLayout* AppLayout::New() const {
  return new AppLayout;
}

void AppLayout::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    directory_y_ = 0u;
    waveform_y_ = 0u;
    stretchy_y_ = 0u;
    clock_x_ = 0u;
    songdata_x_ = 0u;
    loops_x_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppLayout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 directory_y = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &directory_y_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_waveform_y;
        break;
      }
      
      // optional uint32 waveform_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_waveform_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waveform_y_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stretchy_y;
        break;
      }
      
      // optional uint32 stretchy_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stretchy_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stretchy_y_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_clock_x;
        break;
      }
      
      // optional uint32 clock_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clock_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clock_x_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_songdata_x;
        break;
      }
      
      // optional uint32 songdata_x = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_songdata_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &songdata_x_)));
          _set_bit(4);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_loops_x;
        break;
      }
      
      // optional uint32 loops_x = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_loops_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loops_x_)));
          _set_bit(5);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AppLayout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 directory_y = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->directory_y(), output);
  }
  
  // optional uint32 waveform_y = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->waveform_y(), output);
  }
  
  // optional uint32 stretchy_y = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stretchy_y(), output);
  }
  
  // optional uint32 clock_x = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->clock_x(), output);
  }
  
  // optional uint32 songdata_x = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->songdata_x(), output);
  }
  
  // optional uint32 loops_x = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->loops_x(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AppLayout::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 directory_y = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->directory_y(), target);
  }
  
  // optional uint32 waveform_y = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->waveform_y(), target);
  }
  
  // optional uint32 stretchy_y = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stretchy_y(), target);
  }
  
  // optional uint32 clock_x = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->clock_x(), target);
  }
  
  // optional uint32 songdata_x = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->songdata_x(), target);
  }
  
  // optional uint32 loops_x = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->loops_x(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AppLayout::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 directory_y = 1;
    if (has_directory_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->directory_y());
    }
    
    // optional uint32 waveform_y = 2;
    if (has_waveform_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->waveform_y());
    }
    
    // optional uint32 stretchy_y = 3;
    if (has_stretchy_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stretchy_y());
    }
    
    // optional uint32 clock_x = 4;
    if (has_clock_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clock_x());
    }
    
    // optional uint32 songdata_x = 5;
    if (has_songdata_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->songdata_x());
    }
    
    // optional uint32 loops_x = 6;
    if (has_loops_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loops_x());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppLayout::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppLayout* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppLayout*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppLayout::MergeFrom(const AppLayout& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_directory_y(from.directory_y());
    }
    if (from._has_bit(1)) {
      set_waveform_y(from.waveform_y());
    }
    if (from._has_bit(2)) {
      set_stretchy_y(from.stretchy_y());
    }
    if (from._has_bit(3)) {
      set_clock_x(from.clock_x());
    }
    if (from._has_bit(4)) {
      set_songdata_x(from.songdata_x());
    }
    if (from._has_bit(5)) {
      set_loops_x(from.loops_x());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppLayout::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppLayout::CopyFrom(const AppLayout& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppLayout::IsInitialized() const {
  
  return true;
}

void AppLayout::Swap(AppLayout* other) {
  if (other != this) {
    std::swap(directory_y_, other->directory_y_);
    std::swap(waveform_y_, other->waveform_y_);
    std::swap(stretchy_y_, other->stretchy_y_);
    std::swap(clock_x_, other->clock_x_);
    std::swap(songdata_x_, other->songdata_x_);
    std::swap(loops_x_, other->loops_x_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppLayout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppLayout_descriptor_;
  metadata.reflection = AppLayout_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace slow
}  // namespace rec

// @@protoc_insertion_point(global_scope)
