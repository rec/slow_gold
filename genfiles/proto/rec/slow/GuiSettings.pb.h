// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/slow/GuiSettings.proto

#ifndef PROTOBUF_rec_2fslow_2fGuiSettings_2eproto__INCLUDED
#define PROTOBUF_rec_2fslow_2fGuiSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace slow {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fslow_2fGuiSettings_2eproto();
void protobuf_AssignDesc_rec_2fslow_2fGuiSettings_2eproto();
void protobuf_ShutdownFile_rec_2fslow_2fGuiSettings_2eproto();

class GuiSettings;

// ===================================================================

class GuiSettings : public ::google::protobuf::Message {
 public:
  GuiSettings();
  virtual ~GuiSettings();
  
  GuiSettings(const GuiSettings& from);
  
  inline GuiSettings& operator=(const GuiSettings& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuiSettings& default_instance();
  
  void Swap(GuiSettings* other);
  
  // implements Message ----------------------------------------------
  
  GuiSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuiSettings& from);
  void MergeFrom(const GuiSettings& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool show_grid = 1 [default = true];
  inline bool has_show_grid() const;
  inline void clear_show_grid();
  static const int kShowGridFieldNumber = 1;
  inline bool show_grid() const;
  inline void set_show_grid(bool value);
  
  // optional bool drop_adds_to_browser = 2 [default = true];
  inline bool has_drop_adds_to_browser() const;
  inline void clear_drop_adds_to_browser();
  static const int kDropAddsToBrowserFieldNumber = 2;
  inline bool drop_adds_to_browser() const;
  inline void set_drop_adds_to_browser(bool value);
  
  // optional bool parallel_waveforms = 3 [default = false];
  inline bool has_parallel_waveforms() const;
  inline void clear_parallel_waveforms();
  static const int kParallelWaveformsFieldNumber = 3;
  inline bool parallel_waveforms() const;
  inline void set_parallel_waveforms(bool value);
  
  // optional bool show_names_in_waveform = 4 [default = true];
  inline bool has_show_names_in_waveform() const;
  inline void clear_show_names_in_waveform();
  static const int kShowNamesInWaveformFieldNumber = 4;
  inline bool show_names_in_waveform() const;
  inline void set_show_names_in_waveform(bool value);
  
  // @@protoc_insertion_point(class_scope:rec.slow.GuiSettings)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool show_grid_;
  bool drop_adds_to_browser_;
  bool parallel_waveforms_;
  bool show_names_in_waveform_;
  friend void  protobuf_AddDesc_rec_2fslow_2fGuiSettings_2eproto();
  friend void protobuf_AssignDesc_rec_2fslow_2fGuiSettings_2eproto();
  friend void protobuf_ShutdownFile_rec_2fslow_2fGuiSettings_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GuiSettings* default_instance_;
};
// ===================================================================


// ===================================================================

// GuiSettings

// optional bool show_grid = 1 [default = true];
inline bool GuiSettings::has_show_grid() const {
  return _has_bit(0);
}
inline void GuiSettings::clear_show_grid() {
  show_grid_ = true;
  _clear_bit(0);
}
inline bool GuiSettings::show_grid() const {
  return show_grid_;
}
inline void GuiSettings::set_show_grid(bool value) {
  _set_bit(0);
  show_grid_ = value;
}

// optional bool drop_adds_to_browser = 2 [default = true];
inline bool GuiSettings::has_drop_adds_to_browser() const {
  return _has_bit(1);
}
inline void GuiSettings::clear_drop_adds_to_browser() {
  drop_adds_to_browser_ = true;
  _clear_bit(1);
}
inline bool GuiSettings::drop_adds_to_browser() const {
  return drop_adds_to_browser_;
}
inline void GuiSettings::set_drop_adds_to_browser(bool value) {
  _set_bit(1);
  drop_adds_to_browser_ = value;
}

// optional bool parallel_waveforms = 3 [default = false];
inline bool GuiSettings::has_parallel_waveforms() const {
  return _has_bit(2);
}
inline void GuiSettings::clear_parallel_waveforms() {
  parallel_waveforms_ = false;
  _clear_bit(2);
}
inline bool GuiSettings::parallel_waveforms() const {
  return parallel_waveforms_;
}
inline void GuiSettings::set_parallel_waveforms(bool value) {
  _set_bit(2);
  parallel_waveforms_ = value;
}

// optional bool show_names_in_waveform = 4 [default = true];
inline bool GuiSettings::has_show_names_in_waveform() const {
  return _has_bit(3);
}
inline void GuiSettings::clear_show_names_in_waveform() {
  show_names_in_waveform_ = true;
  _clear_bit(3);
}
inline bool GuiSettings::show_names_in_waveform() const {
  return show_names_in_waveform_;
}
inline void GuiSettings::set_show_names_in_waveform(bool value) {
  _set_bit(3);
  show_names_in_waveform_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace slow
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fslow_2fGuiSettings_2eproto__INCLUDED
