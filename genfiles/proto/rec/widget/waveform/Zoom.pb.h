// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/widget/waveform/Zoom.proto

#ifndef PROTOBUF_rec_2fwidget_2fwaveform_2fZoom_2eproto__INCLUDED
#define PROTOBUF_rec_2fwidget_2fwaveform_2fZoom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace widget {
namespace waveform {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fwidget_2fwaveform_2fZoom_2eproto();
void protobuf_AssignDesc_rec_2fwidget_2fwaveform_2fZoom_2eproto();
void protobuf_ShutdownFile_rec_2fwidget_2fwaveform_2fZoom_2eproto();

class ZoomProto;

// ===================================================================

class ZoomProto : public ::google::protobuf::Message {
 public:
  ZoomProto();
  virtual ~ZoomProto();
  
  ZoomProto(const ZoomProto& from);
  
  inline ZoomProto& operator=(const ZoomProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoomProto& default_instance();
  
  void Swap(ZoomProto* other);
  
  // implements Message ----------------------------------------------
  
  ZoomProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoomProto& from);
  void MergeFrom(const ZoomProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::uint64 begin() const;
  inline void set_begin(::google::protobuf::uint64 value);
  
  // optional uint64 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint64 end() const;
  inline void set_end(::google::protobuf::uint64 value);
  
  // optional bool zoom_to_selection = 3;
  inline bool has_zoom_to_selection() const;
  inline void clear_zoom_to_selection();
  static const int kZoomToSelectionFieldNumber = 3;
  inline bool zoom_to_selection() const;
  inline void set_zoom_to_selection(bool value);
  
  // optional bool follow_cursor = 4;
  inline bool has_follow_cursor() const;
  inline void clear_follow_cursor();
  static const int kFollowCursorFieldNumber = 4;
  inline bool follow_cursor() const;
  inline void set_follow_cursor(bool value);
  
  // optional bool click_to_zoom = 5;
  inline bool has_click_to_zoom() const;
  inline void clear_click_to_zoom();
  static const int kClickToZoomFieldNumber = 5;
  inline bool click_to_zoom() const;
  inline void set_click_to_zoom(bool value);
  
  // @@protoc_insertion_point(class_scope:rec.widget.waveform.ZoomProto)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 begin_;
  ::google::protobuf::uint64 end_;
  bool zoom_to_selection_;
  bool follow_cursor_;
  bool click_to_zoom_;
  friend void  protobuf_AddDesc_rec_2fwidget_2fwaveform_2fZoom_2eproto();
  friend void protobuf_AssignDesc_rec_2fwidget_2fwaveform_2fZoom_2eproto();
  friend void protobuf_ShutdownFile_rec_2fwidget_2fwaveform_2fZoom_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ZoomProto* default_instance_;
};
// ===================================================================


// ===================================================================

// ZoomProto

// optional uint64 begin = 1;
inline bool ZoomProto::has_begin() const {
  return _has_bit(0);
}
inline void ZoomProto::clear_begin() {
  begin_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 ZoomProto::begin() const {
  return begin_;
}
inline void ZoomProto::set_begin(::google::protobuf::uint64 value) {
  _set_bit(0);
  begin_ = value;
}

// optional uint64 end = 2;
inline bool ZoomProto::has_end() const {
  return _has_bit(1);
}
inline void ZoomProto::clear_end() {
  end_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 ZoomProto::end() const {
  return end_;
}
inline void ZoomProto::set_end(::google::protobuf::uint64 value) {
  _set_bit(1);
  end_ = value;
}

// optional bool zoom_to_selection = 3;
inline bool ZoomProto::has_zoom_to_selection() const {
  return _has_bit(2);
}
inline void ZoomProto::clear_zoom_to_selection() {
  zoom_to_selection_ = false;
  _clear_bit(2);
}
inline bool ZoomProto::zoom_to_selection() const {
  return zoom_to_selection_;
}
inline void ZoomProto::set_zoom_to_selection(bool value) {
  _set_bit(2);
  zoom_to_selection_ = value;
}

// optional bool follow_cursor = 4;
inline bool ZoomProto::has_follow_cursor() const {
  return _has_bit(3);
}
inline void ZoomProto::clear_follow_cursor() {
  follow_cursor_ = false;
  _clear_bit(3);
}
inline bool ZoomProto::follow_cursor() const {
  return follow_cursor_;
}
inline void ZoomProto::set_follow_cursor(bool value) {
  _set_bit(3);
  follow_cursor_ = value;
}

// optional bool click_to_zoom = 5;
inline bool ZoomProto::has_click_to_zoom() const {
  return _has_bit(4);
}
inline void ZoomProto::clear_click_to_zoom() {
  click_to_zoom_ = false;
  _clear_bit(4);
}
inline bool ZoomProto::click_to_zoom() const {
  return click_to_zoom_;
}
inline void ZoomProto::set_click_to_zoom(bool value) {
  _set_bit(4);
  click_to_zoom_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace waveform
}  // namespace widget
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fwidget_2fwaveform_2fZoom_2eproto__INCLUDED
