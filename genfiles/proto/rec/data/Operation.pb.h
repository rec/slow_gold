// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/data/Operation.proto

#ifndef PROTOBUF_rec_2fdata_2fOperation_2eproto__INCLUDED
#define PROTOBUF_rec_2fdata_2fOperation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "rec/data/proto/Address.pb.h"
#include "rec/data/proto/Value.pb.h"
// @@protoc_insertion_point(includes)

namespace rec {
namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fdata_2fOperation_2eproto();
void protobuf_AssignDesc_rec_2fdata_2fOperation_2eproto();
void protobuf_ShutdownFile_rec_2fdata_2fOperation_2eproto();

class Operation;
class Operations;

enum Operation_Command {
  Operation_Command_APPEND = 0,
  Operation_Command_CLEAR = 1,
  Operation_Command_REMOVE = 2,
  Operation_Command_SET = 3,
  Operation_Command_SWAP = 4,
  Operation_Command_COMMAND_COUNT = 5
};
bool Operation_Command_IsValid(int value);
const Operation_Command Operation_Command_Command_MIN = Operation_Command_APPEND;
const Operation_Command Operation_Command_Command_MAX = Operation_Command_COMMAND_COUNT;
const int Operation_Command_Command_ARRAYSIZE = Operation_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* Operation_Command_descriptor();
inline const ::std::string& Operation_Command_Name(Operation_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    Operation_Command_descriptor(), value);
}
inline bool Operation_Command_Parse(
    const ::std::string& name, Operation_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Operation_Command>(
    Operation_Command_descriptor(), name, value);
}
// ===================================================================

class Operation : public ::google::protobuf::Message {
 public:
  Operation();
  virtual ~Operation();

  Operation(const Operation& from);

  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Operation& default_instance();

  void Swap(Operation* other);

  // implements Message ----------------------------------------------

  Operation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Operation& from);
  void MergeFrom(const Operation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Operation_Command Command;
  static const Command APPEND = Operation_Command_APPEND;
  static const Command CLEAR = Operation_Command_CLEAR;
  static const Command REMOVE = Operation_Command_REMOVE;
  static const Command SET = Operation_Command_SET;
  static const Command SWAP = Operation_Command_SWAP;
  static const Command COMMAND_COUNT = Operation_Command_COMMAND_COUNT;
  static inline bool Command_IsValid(int value) {
    return Operation_Command_IsValid(value);
  }
  static const Command Command_MIN =
    Operation_Command_Command_MIN;
  static const Command Command_MAX =
    Operation_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    Operation_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return Operation_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return Operation_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return Operation_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .rec.data.Operation.Command command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::rec::data::Operation_Command command() const;
  inline void set_command(::rec::data::Operation_Command value);

  // optional .rec.data.AddressProto address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::rec::data::AddressProto& address() const;
  inline ::rec::data::AddressProto* mutable_address();
  inline ::rec::data::AddressProto* release_address();
  inline void set_allocated_address(::rec::data::AddressProto* address);

  // repeated .rec.data.ValueProto value = 3;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::rec::data::ValueProto& value(int index) const;
  inline ::rec::data::ValueProto* mutable_value(int index);
  inline ::rec::data::ValueProto* add_value();
  inline const ::google::protobuf::RepeatedPtrField< ::rec::data::ValueProto >&
      value() const;
  inline ::google::protobuf::RepeatedPtrField< ::rec::data::ValueProto >*
      mutable_value();

  // optional uint32 remove = 4 [default = 1];
  inline bool has_remove() const;
  inline void clear_remove();
  static const int kRemoveFieldNumber = 4;
  inline ::google::protobuf::uint32 remove() const;
  inline void set_remove(::google::protobuf::uint32 value);

  // optional uint32 swap1 = 5;
  inline bool has_swap1() const;
  inline void clear_swap1();
  static const int kSwap1FieldNumber = 5;
  inline ::google::protobuf::uint32 swap1() const;
  inline void set_swap1(::google::protobuf::uint32 value);

  // optional uint32 swap2 = 6;
  inline bool has_swap2() const;
  inline void clear_swap2();
  static const int kSwap2FieldNumber = 6;
  inline ::google::protobuf::uint32 swap2() const;
  inline void set_swap2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rec.data.Operation)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_remove();
  inline void clear_has_remove();
  inline void set_has_swap1();
  inline void clear_has_swap1();
  inline void set_has_swap2();
  inline void clear_has_swap2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::rec::data::AddressProto* address_;
  int command_;
  ::google::protobuf::uint32 remove_;
  ::google::protobuf::RepeatedPtrField< ::rec::data::ValueProto > value_;
  ::google::protobuf::uint32 swap1_;
  ::google::protobuf::uint32 swap2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fdata_2fOperation_2eproto();
  friend void protobuf_AssignDesc_rec_2fdata_2fOperation_2eproto();
  friend void protobuf_ShutdownFile_rec_2fdata_2fOperation_2eproto();

  void InitAsDefaultInstance();
  static Operation* default_instance_;
};
// -------------------------------------------------------------------

class Operations : public ::google::protobuf::Message {
 public:
  Operations();
  virtual ~Operations();

  Operations(const Operations& from);

  inline Operations& operator=(const Operations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Operations& default_instance();

  void Swap(Operations* other);

  // implements Message ----------------------------------------------

  Operations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Operations& from);
  void MergeFrom(const Operations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rec.data.Operation operation = 1;
  inline int operation_size() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 1;
  inline const ::rec::data::Operation& operation(int index) const;
  inline ::rec::data::Operation* mutable_operation(int index);
  inline ::rec::data::Operation* add_operation();
  inline const ::google::protobuf::RepeatedPtrField< ::rec::data::Operation >&
      operation() const;
  inline ::google::protobuf::RepeatedPtrField< ::rec::data::Operation >*
      mutable_operation();

  // optional bool undoable = 2 [default = true];
  inline bool has_undoable() const;
  inline void clear_undoable();
  static const int kUndoableFieldNumber = 2;
  inline bool undoable() const;
  inline void set_undoable(bool value);

  // @@protoc_insertion_point(class_scope:rec.data.Operations)
 private:
  inline void set_has_undoable();
  inline void clear_has_undoable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rec::data::Operation > operation_;
  bool undoable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fdata_2fOperation_2eproto();
  friend void protobuf_AssignDesc_rec_2fdata_2fOperation_2eproto();
  friend void protobuf_ShutdownFile_rec_2fdata_2fOperation_2eproto();

  void InitAsDefaultInstance();
  static Operations* default_instance_;
};
// ===================================================================


// ===================================================================

// Operation

// optional .rec.data.Operation.Command command = 1;
inline bool Operation::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Operation::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Operation::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Operation::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::rec::data::Operation_Command Operation::command() const {
  return static_cast< ::rec::data::Operation_Command >(command_);
}
inline void Operation::set_command(::rec::data::Operation_Command value) {
  assert(::rec::data::Operation_Command_IsValid(value));
  set_has_command();
  command_ = value;
}

// optional .rec.data.AddressProto address = 2;
inline bool Operation::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Operation::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Operation::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Operation::clear_address() {
  if (address_ != NULL) address_->::rec::data::AddressProto::Clear();
  clear_has_address();
}
inline const ::rec::data::AddressProto& Operation::address() const {
  return address_ != NULL ? *address_ : *default_instance_->address_;
}
inline ::rec::data::AddressProto* Operation::mutable_address() {
  set_has_address();
  if (address_ == NULL) address_ = new ::rec::data::AddressProto;
  return address_;
}
inline ::rec::data::AddressProto* Operation::release_address() {
  clear_has_address();
  ::rec::data::AddressProto* temp = address_;
  address_ = NULL;
  return temp;
}
inline void Operation::set_allocated_address(::rec::data::AddressProto* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
}

// repeated .rec.data.ValueProto value = 3;
inline int Operation::value_size() const {
  return value_.size();
}
inline void Operation::clear_value() {
  value_.Clear();
}
inline const ::rec::data::ValueProto& Operation::value(int index) const {
  return value_.Get(index);
}
inline ::rec::data::ValueProto* Operation::mutable_value(int index) {
  return value_.Mutable(index);
}
inline ::rec::data::ValueProto* Operation::add_value() {
  return value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rec::data::ValueProto >&
Operation::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::rec::data::ValueProto >*
Operation::mutable_value() {
  return &value_;
}

// optional uint32 remove = 4 [default = 1];
inline bool Operation::has_remove() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Operation::set_has_remove() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Operation::clear_has_remove() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Operation::clear_remove() {
  remove_ = 1u;
  clear_has_remove();
}
inline ::google::protobuf::uint32 Operation::remove() const {
  return remove_;
}
inline void Operation::set_remove(::google::protobuf::uint32 value) {
  set_has_remove();
  remove_ = value;
}

// optional uint32 swap1 = 5;
inline bool Operation::has_swap1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Operation::set_has_swap1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Operation::clear_has_swap1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Operation::clear_swap1() {
  swap1_ = 0u;
  clear_has_swap1();
}
inline ::google::protobuf::uint32 Operation::swap1() const {
  return swap1_;
}
inline void Operation::set_swap1(::google::protobuf::uint32 value) {
  set_has_swap1();
  swap1_ = value;
}

// optional uint32 swap2 = 6;
inline bool Operation::has_swap2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Operation::set_has_swap2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Operation::clear_has_swap2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Operation::clear_swap2() {
  swap2_ = 0u;
  clear_has_swap2();
}
inline ::google::protobuf::uint32 Operation::swap2() const {
  return swap2_;
}
inline void Operation::set_swap2(::google::protobuf::uint32 value) {
  set_has_swap2();
  swap2_ = value;
}

// -------------------------------------------------------------------

// Operations

// repeated .rec.data.Operation operation = 1;
inline int Operations::operation_size() const {
  return operation_.size();
}
inline void Operations::clear_operation() {
  operation_.Clear();
}
inline const ::rec::data::Operation& Operations::operation(int index) const {
  return operation_.Get(index);
}
inline ::rec::data::Operation* Operations::mutable_operation(int index) {
  return operation_.Mutable(index);
}
inline ::rec::data::Operation* Operations::add_operation() {
  return operation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rec::data::Operation >&
Operations::operation() const {
  return operation_;
}
inline ::google::protobuf::RepeatedPtrField< ::rec::data::Operation >*
Operations::mutable_operation() {
  return &operation_;
}

// optional bool undoable = 2 [default = true];
inline bool Operations::has_undoable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Operations::set_has_undoable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Operations::clear_has_undoable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Operations::clear_undoable() {
  undoable_ = true;
  clear_has_undoable();
}
inline bool Operations::undoable() const {
  return undoable_;
}
inline void Operations::set_undoable(bool value) {
  set_has_undoable();
  undoable_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rec::data::Operation_Command>() {
  return ::rec::data::Operation_Command_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fdata_2fOperation_2eproto__INCLUDED
