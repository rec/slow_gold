// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/base/Internat.proto

#ifndef PROTOBUF_rec_2fbase_2fInternat_2eproto__INCLUDED
#define PROTOBUF_rec_2fbase_2fInternat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace rec {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fbase_2fInternat_2eproto();
void protobuf_AssignDesc_rec_2fbase_2fInternat_2eproto();
void protobuf_ShutdownFile_rec_2fbase_2fInternat_2eproto();

class Internat;

enum Internat_Language {
  Internat_Language_NONE = 0,
  Internat_Language_DE = 1,
  Internat_Language_EN = 2,
  Internat_Language_ES = 3,
  Internat_Language_FR = 4,
  Internat_Language_ID = 5,
  Internat_Language_FIRST = 1,
  Internat_Language_LAST = 5
};
bool Internat_Language_IsValid(int value);
const Internat_Language Internat_Language_Language_MIN = Internat_Language_NONE;
const Internat_Language Internat_Language_Language_MAX = Internat_Language_ID;
const int Internat_Language_Language_ARRAYSIZE = Internat_Language_Language_MAX + 1;

const ::google::protobuf::EnumDescriptor* Internat_Language_descriptor();
inline const ::std::string& Internat_Language_Name(Internat_Language value) {
  return ::google::protobuf::internal::NameOfEnum(
    Internat_Language_descriptor(), value);
}
inline bool Internat_Language_Parse(
    const ::std::string& name, Internat_Language* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Internat_Language>(
    Internat_Language_descriptor(), name, value);
}
// ===================================================================

class Internat : public ::google::protobuf::Message {
 public:
  Internat();
  virtual ~Internat();
  
  Internat(const Internat& from);
  
  inline Internat& operator=(const Internat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Internat& default_instance();
  
  void Swap(Internat* other);
  
  // implements Message ----------------------------------------------
  
  Internat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Internat& from);
  void MergeFrom(const Internat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Internat_Language Language;
  static const Language NONE = Internat_Language_NONE;
  static const Language DE = Internat_Language_DE;
  static const Language EN = Internat_Language_EN;
  static const Language ES = Internat_Language_ES;
  static const Language FR = Internat_Language_FR;
  static const Language ID = Internat_Language_ID;
  static const Language FIRST = Internat_Language_FIRST;
  static const Language LAST = Internat_Language_LAST;
  static inline bool Language_IsValid(int value) {
    return Internat_Language_IsValid(value);
  }
  static const Language Language_MIN =
    Internat_Language_Language_MIN;
  static const Language Language_MAX =
    Internat_Language_Language_MAX;
  static const int Language_ARRAYSIZE =
    Internat_Language_Language_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Language_descriptor() {
    return Internat_Language_descriptor();
  }
  static inline const ::std::string& Language_Name(Language value) {
    return Internat_Language_Name(value);
  }
  static inline bool Language_Parse(const ::std::string& name,
      Language* value) {
    return Internat_Language_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .rec.Internat.Language language = 1 [default = EN];
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 1;
  inline ::rec::Internat_Language language() const;
  inline void set_language(::rec::Internat_Language value);
  
  // @@protoc_insertion_point(class_scope:rec.Internat)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int language_;
  friend void  protobuf_AddDesc_rec_2fbase_2fInternat_2eproto();
  friend void protobuf_AssignDesc_rec_2fbase_2fInternat_2eproto();
  friend void protobuf_ShutdownFile_rec_2fbase_2fInternat_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Internat* default_instance_;
};
// ===================================================================


// ===================================================================

// Internat

// optional .rec.Internat.Language language = 1 [default = EN];
inline bool Internat::has_language() const {
  return _has_bit(0);
}
inline void Internat::clear_language() {
  language_ = 2;
  _clear_bit(0);
}
inline ::rec::Internat_Language Internat::language() const {
  return static_cast< ::rec::Internat_Language >(language_);
}
inline void Internat::set_language(::rec::Internat_Language value) {
  GOOGLE_DCHECK(::rec::Internat_Language_IsValid(value));
  _set_bit(0);
  language_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rec::Internat_Language>() {
  return ::rec::Internat_Language_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fbase_2fInternat_2eproto__INCLUDED
