// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/gui/Orientation.proto

#ifndef PROTOBUF_rec_2fgui_2fOrientation_2eproto__INCLUDED
#define PROTOBUF_rec_2fgui_2fOrientation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace gui {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fgui_2fOrientation_2eproto();
void protobuf_AssignDesc_rec_2fgui_2fOrientation_2eproto();
void protobuf_ShutdownFile_rec_2fgui_2fOrientation_2eproto();

class OrientationProto;

enum OrientationProto_Orientation {
  OrientationProto_Orientation_HORIZONTAL = 0,
  OrientationProto_Orientation_VERTICAL = 1
};
bool OrientationProto_Orientation_IsValid(int value);
const OrientationProto_Orientation OrientationProto_Orientation_Orientation_MIN = OrientationProto_Orientation_HORIZONTAL;
const OrientationProto_Orientation OrientationProto_Orientation_Orientation_MAX = OrientationProto_Orientation_VERTICAL;
const int OrientationProto_Orientation_Orientation_ARRAYSIZE = OrientationProto_Orientation_Orientation_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrientationProto_Orientation_descriptor();
inline const ::std::string& OrientationProto_Orientation_Name(OrientationProto_Orientation value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrientationProto_Orientation_descriptor(), value);
}
inline bool OrientationProto_Orientation_Parse(
    const ::std::string& name, OrientationProto_Orientation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrientationProto_Orientation>(
    OrientationProto_Orientation_descriptor(), name, value);
}
// ===================================================================

class OrientationProto : public ::google::protobuf::Message {
 public:
  OrientationProto();
  virtual ~OrientationProto();

  OrientationProto(const OrientationProto& from);

  inline OrientationProto& operator=(const OrientationProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrientationProto& default_instance();

  void Swap(OrientationProto* other);

  // implements Message ----------------------------------------------

  OrientationProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrientationProto& from);
  void MergeFrom(const OrientationProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OrientationProto_Orientation Orientation;
  static const Orientation HORIZONTAL = OrientationProto_Orientation_HORIZONTAL;
  static const Orientation VERTICAL = OrientationProto_Orientation_VERTICAL;
  static inline bool Orientation_IsValid(int value) {
    return OrientationProto_Orientation_IsValid(value);
  }
  static const Orientation Orientation_MIN =
    OrientationProto_Orientation_Orientation_MIN;
  static const Orientation Orientation_MAX =
    OrientationProto_Orientation_Orientation_MAX;
  static const int Orientation_ARRAYSIZE =
    OrientationProto_Orientation_Orientation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Orientation_descriptor() {
    return OrientationProto_Orientation_descriptor();
  }
  static inline const ::std::string& Orientation_Name(Orientation value) {
    return OrientationProto_Orientation_Name(value);
  }
  static inline bool Orientation_Parse(const ::std::string& name,
      Orientation* value) {
    return OrientationProto_Orientation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rec.gui.OrientationProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_rec_2fgui_2fOrientation_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fOrientation_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fOrientation_2eproto();

  void InitAsDefaultInstance();
  static OrientationProto* default_instance_;
};
// ===================================================================


// ===================================================================

// OrientationProto


// @@protoc_insertion_point(namespace_scope)

}  // namespace gui
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rec::gui::OrientationProto_Orientation>() {
  return ::rec::gui::OrientationProto_Orientation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fgui_2fOrientation_2eproto__INCLUDED
