// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/gui/Geometry.proto

#ifndef PROTOBUF_rec_2fgui_2fGeometry_2eproto__INCLUDED
#define PROTOBUF_rec_2fgui_2fGeometry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace gui {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
void protobuf_AssignDesc_rec_2fgui_2fGeometry_2eproto();
void protobuf_ShutdownFile_rec_2fgui_2fGeometry_2eproto();

class Point;
class Rectangle;
class Line;
class Layer;

// ===================================================================

class Point : public ::google::protobuf::Message {
 public:
  Point();
  virtual ~Point();
  
  Point(const Point& from);
  
  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();
  
  void Swap(Point* other);
  
  // implements Message ----------------------------------------------
  
  Point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:rec.gui.Point)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fGeometry_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Rectangle : public ::google::protobuf::Message {
 public:
  Rectangle();
  virtual ~Rectangle();
  
  Rectangle(const Rectangle& from);
  
  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Rectangle& default_instance();
  
  void Swap(Rectangle* other);
  
  // implements Message ----------------------------------------------
  
  Rectangle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .rec.gui.Point top_left = 1;
  inline bool has_top_left() const;
  inline void clear_top_left();
  static const int kTopLeftFieldNumber = 1;
  inline const ::rec::gui::Point& top_left() const;
  inline ::rec::gui::Point* mutable_top_left();
  
  // optional .rec.gui.Point dimensions = 2;
  inline bool has_dimensions() const;
  inline void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  inline const ::rec::gui::Point& dimensions() const;
  inline ::rec::gui::Point* mutable_dimensions();
  
  // @@protoc_insertion_point(class_scope:rec.gui.Rectangle)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::rec::gui::Point* top_left_;
  ::rec::gui::Point* dimensions_;
  friend void  protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fGeometry_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Rectangle* default_instance_;
};
// -------------------------------------------------------------------

class Line : public ::google::protobuf::Message {
 public:
  Line();
  virtual ~Line();
  
  Line(const Line& from);
  
  inline Line& operator=(const Line& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Line& default_instance();
  
  void Swap(Line* other);
  
  // implements Message ----------------------------------------------
  
  Line* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Line& from);
  void MergeFrom(const Line& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .rec.gui.Rectangle bounds = 1;
  inline bool has_bounds() const;
  inline void clear_bounds();
  static const int kBoundsFieldNumber = 1;
  inline const ::rec::gui::Rectangle& bounds() const;
  inline ::rec::gui::Rectangle* mutable_bounds();
  
  // optional float thickness = 2;
  inline bool has_thickness() const;
  inline void clear_thickness();
  static const int kThicknessFieldNumber = 2;
  inline float thickness() const;
  inline void set_thickness(float value);
  
  // repeated float dashing = 3;
  inline int dashing_size() const;
  inline void clear_dashing();
  static const int kDashingFieldNumber = 3;
  inline float dashing(int index) const;
  inline void set_dashing(int index, float value);
  inline void add_dashing(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      dashing() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_dashing();
  
  // @@protoc_insertion_point(class_scope:rec.gui.Line)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::rec::gui::Rectangle* bounds_;
  float thickness_;
  ::google::protobuf::RepeatedField< float > dashing_;
  friend void  protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fGeometry_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Line* default_instance_;
};
// -------------------------------------------------------------------

class Layer : public ::google::protobuf::Message {
 public:
  Layer();
  virtual ~Layer();
  
  Layer(const Layer& from);
  
  inline Layer& operator=(const Layer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Layer& default_instance();
  
  void Swap(Layer* other);
  
  // implements Message ----------------------------------------------
  
  Layer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Layer& from);
  void MergeFrom(const Layer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .rec.gui.Rectangle bounds = 1;
  inline bool has_bounds() const;
  inline void clear_bounds();
  static const int kBoundsFieldNumber = 1;
  inline const ::rec::gui::Rectangle& bounds() const;
  inline ::rec::gui::Rectangle* mutable_bounds();
  
  // optional int32 zOrder = 2 [default = -1];
  inline bool has_zorder() const;
  inline void clear_zorder();
  static const int kZOrderFieldNumber = 2;
  inline ::google::protobuf::int32 zorder() const;
  inline void set_zorder(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:rec.gui.Layer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::rec::gui::Rectangle* bounds_;
  ::google::protobuf::int32 zorder_;
  friend void  protobuf_AddDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fGeometry_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fGeometry_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Layer* default_instance_;
};
// ===================================================================


// ===================================================================

// Point

// optional int32 x = 1;
inline bool Point::has_x() const {
  return _has_bit(0);
}
inline void Point::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Point::x() const {
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  _set_bit(0);
  x_ = value;
}

// optional int32 y = 2;
inline bool Point::has_y() const {
  return _has_bit(1);
}
inline void Point::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Point::y() const {
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  _set_bit(1);
  y_ = value;
}

// -------------------------------------------------------------------

// Rectangle

// optional .rec.gui.Point top_left = 1;
inline bool Rectangle::has_top_left() const {
  return _has_bit(0);
}
inline void Rectangle::clear_top_left() {
  if (top_left_ != NULL) top_left_->::rec::gui::Point::Clear();
  _clear_bit(0);
}
inline const ::rec::gui::Point& Rectangle::top_left() const {
  return top_left_ != NULL ? *top_left_ : *default_instance_->top_left_;
}
inline ::rec::gui::Point* Rectangle::mutable_top_left() {
  _set_bit(0);
  if (top_left_ == NULL) top_left_ = new ::rec::gui::Point;
  return top_left_;
}

// optional .rec.gui.Point dimensions = 2;
inline bool Rectangle::has_dimensions() const {
  return _has_bit(1);
}
inline void Rectangle::clear_dimensions() {
  if (dimensions_ != NULL) dimensions_->::rec::gui::Point::Clear();
  _clear_bit(1);
}
inline const ::rec::gui::Point& Rectangle::dimensions() const {
  return dimensions_ != NULL ? *dimensions_ : *default_instance_->dimensions_;
}
inline ::rec::gui::Point* Rectangle::mutable_dimensions() {
  _set_bit(1);
  if (dimensions_ == NULL) dimensions_ = new ::rec::gui::Point;
  return dimensions_;
}

// -------------------------------------------------------------------

// Line

// optional .rec.gui.Rectangle bounds = 1;
inline bool Line::has_bounds() const {
  return _has_bit(0);
}
inline void Line::clear_bounds() {
  if (bounds_ != NULL) bounds_->::rec::gui::Rectangle::Clear();
  _clear_bit(0);
}
inline const ::rec::gui::Rectangle& Line::bounds() const {
  return bounds_ != NULL ? *bounds_ : *default_instance_->bounds_;
}
inline ::rec::gui::Rectangle* Line::mutable_bounds() {
  _set_bit(0);
  if (bounds_ == NULL) bounds_ = new ::rec::gui::Rectangle;
  return bounds_;
}

// optional float thickness = 2;
inline bool Line::has_thickness() const {
  return _has_bit(1);
}
inline void Line::clear_thickness() {
  thickness_ = 0;
  _clear_bit(1);
}
inline float Line::thickness() const {
  return thickness_;
}
inline void Line::set_thickness(float value) {
  _set_bit(1);
  thickness_ = value;
}

// repeated float dashing = 3;
inline int Line::dashing_size() const {
  return dashing_.size();
}
inline void Line::clear_dashing() {
  dashing_.Clear();
}
inline float Line::dashing(int index) const {
  return dashing_.Get(index);
}
inline void Line::set_dashing(int index, float value) {
  dashing_.Set(index, value);
}
inline void Line::add_dashing(float value) {
  dashing_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
Line::dashing() const {
  return dashing_;
}
inline ::google::protobuf::RepeatedField< float >*
Line::mutable_dashing() {
  return &dashing_;
}

// -------------------------------------------------------------------

// Layer

// optional .rec.gui.Rectangle bounds = 1;
inline bool Layer::has_bounds() const {
  return _has_bit(0);
}
inline void Layer::clear_bounds() {
  if (bounds_ != NULL) bounds_->::rec::gui::Rectangle::Clear();
  _clear_bit(0);
}
inline const ::rec::gui::Rectangle& Layer::bounds() const {
  return bounds_ != NULL ? *bounds_ : *default_instance_->bounds_;
}
inline ::rec::gui::Rectangle* Layer::mutable_bounds() {
  _set_bit(0);
  if (bounds_ == NULL) bounds_ = new ::rec::gui::Rectangle;
  return bounds_;
}

// optional int32 zOrder = 2 [default = -1];
inline bool Layer::has_zorder() const {
  return _has_bit(1);
}
inline void Layer::clear_zorder() {
  zorder_ = -1;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Layer::zorder() const {
  return zorder_;
}
inline void Layer::set_zorder(::google::protobuf::int32 value) {
  _set_bit(1);
  zorder_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gui
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fgui_2fGeometry_2eproto__INCLUDED
