// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/gui/proto/Help.proto

#ifndef PROTOBUF_rec_2fgui_2fproto_2fHelp_2eproto__INCLUDED
#define PROTOBUF_rec_2fgui_2fproto_2fHelp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "rec/gui/proto/Size.pb.h"
// @@protoc_insertion_point(includes)

namespace rec {
namespace gui {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fgui_2fproto_2fHelp_2eproto();
void protobuf_AssignDesc_rec_2fgui_2fproto_2fHelp_2eproto();
void protobuf_ShutdownFile_rec_2fgui_2fproto_2fHelp_2eproto();

class HelpProto;

// ===================================================================

class HelpProto : public ::google::protobuf::Message {
 public:
  HelpProto();
  virtual ~HelpProto();

  HelpProto(const HelpProto& from);

  inline HelpProto& operator=(const HelpProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelpProto& default_instance();

  void Swap(HelpProto* other);

  // implements Message ----------------------------------------------

  HelpProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelpProto& from);
  void MergeFrom(const HelpProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .rec.gui.Size caption_size = 1;
  inline bool has_caption_size() const;
  inline void clear_caption_size();
  static const int kCaptionSizeFieldNumber = 1;
  inline const ::rec::gui::Size& caption_size() const;
  inline ::rec::gui::Size* mutable_caption_size();
  inline ::rec::gui::Size* release_caption_size();
  inline void set_allocated_caption_size(::rec::gui::Size* caption_size);

  // optional .rec.gui.Size body_size = 2;
  inline bool has_body_size() const;
  inline void clear_body_size();
  static const int kBodySizeFieldNumber = 2;
  inline const ::rec::gui::Size& body_size() const;
  inline ::rec::gui::Size* mutable_body_size();
  inline ::rec::gui::Size* release_body_size();
  inline void set_allocated_body_size(::rec::gui::Size* body_size);

  // @@protoc_insertion_point(class_scope:rec.gui.HelpProto)
 private:
  inline void set_has_caption_size();
  inline void clear_has_caption_size();
  inline void set_has_body_size();
  inline void clear_has_body_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::rec::gui::Size* caption_size_;
  ::rec::gui::Size* body_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fgui_2fproto_2fHelp_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fproto_2fHelp_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fproto_2fHelp_2eproto();

  void InitAsDefaultInstance();
  static HelpProto* default_instance_;
};
// ===================================================================


// ===================================================================

// HelpProto

// optional .rec.gui.Size caption_size = 1;
inline bool HelpProto::has_caption_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HelpProto::set_has_caption_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HelpProto::clear_has_caption_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HelpProto::clear_caption_size() {
  if (caption_size_ != NULL) caption_size_->::rec::gui::Size::Clear();
  clear_has_caption_size();
}
inline const ::rec::gui::Size& HelpProto::caption_size() const {
  return caption_size_ != NULL ? *caption_size_ : *default_instance_->caption_size_;
}
inline ::rec::gui::Size* HelpProto::mutable_caption_size() {
  set_has_caption_size();
  if (caption_size_ == NULL) caption_size_ = new ::rec::gui::Size;
  return caption_size_;
}
inline ::rec::gui::Size* HelpProto::release_caption_size() {
  clear_has_caption_size();
  ::rec::gui::Size* temp = caption_size_;
  caption_size_ = NULL;
  return temp;
}
inline void HelpProto::set_allocated_caption_size(::rec::gui::Size* caption_size) {
  delete caption_size_;
  caption_size_ = caption_size;
  if (caption_size) {
    set_has_caption_size();
  } else {
    clear_has_caption_size();
  }
}

// optional .rec.gui.Size body_size = 2;
inline bool HelpProto::has_body_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HelpProto::set_has_body_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HelpProto::clear_has_body_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HelpProto::clear_body_size() {
  if (body_size_ != NULL) body_size_->::rec::gui::Size::Clear();
  clear_has_body_size();
}
inline const ::rec::gui::Size& HelpProto::body_size() const {
  return body_size_ != NULL ? *body_size_ : *default_instance_->body_size_;
}
inline ::rec::gui::Size* HelpProto::mutable_body_size() {
  set_has_body_size();
  if (body_size_ == NULL) body_size_ = new ::rec::gui::Size;
  return body_size_;
}
inline ::rec::gui::Size* HelpProto::release_body_size() {
  clear_has_body_size();
  ::rec::gui::Size* temp = body_size_;
  body_size_ = NULL;
  return temp;
}
inline void HelpProto::set_allocated_body_size(::rec::gui::Size* body_size) {
  delete body_size_;
  body_size_ = body_size;
  if (body_size) {
    set_has_body_size();
  } else {
    clear_has_body_size();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gui
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fgui_2fproto_2fHelp_2eproto__INCLUDED
