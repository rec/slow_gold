// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/gui/proto/Constants.proto

#ifndef PROTOBUF_rec_2fgui_2fproto_2fConstants_2eproto__INCLUDED
#define PROTOBUF_rec_2fgui_2fproto_2fConstants_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace gui {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fgui_2fproto_2fConstants_2eproto();
void protobuf_AssignDesc_rec_2fgui_2fproto_2fConstants_2eproto();
void protobuf_ShutdownFile_rec_2fgui_2fproto_2fConstants_2eproto();

class ConstantProto;
class ConstantProtos;

// ===================================================================

class ConstantProto : public ::google::protobuf::Message {
 public:
  ConstantProto();
  virtual ~ConstantProto();

  ConstantProto(const ConstantProto& from);

  inline ConstantProto& operator=(const ConstantProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstantProto& default_instance();

  void Swap(ConstantProto* other);

  // implements Message ----------------------------------------------

  ConstantProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConstantProto& from);
  void MergeFrom(const ConstantProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional double value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:rec.gui.ConstantProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  double value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fgui_2fproto_2fConstants_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fproto_2fConstants_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fproto_2fConstants_2eproto();

  void InitAsDefaultInstance();
  static ConstantProto* default_instance_;
};
// -------------------------------------------------------------------

class ConstantProtos : public ::google::protobuf::Message {
 public:
  ConstantProtos();
  virtual ~ConstantProtos();

  ConstantProtos(const ConstantProtos& from);

  inline ConstantProtos& operator=(const ConstantProtos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstantProtos& default_instance();

  void Swap(ConstantProtos* other);

  // implements Message ----------------------------------------------

  ConstantProtos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConstantProtos& from);
  void MergeFrom(const ConstantProtos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rec.gui.ConstantProto constant = 1;
  inline int constant_size() const;
  inline void clear_constant();
  static const int kConstantFieldNumber = 1;
  inline const ::rec::gui::ConstantProto& constant(int index) const;
  inline ::rec::gui::ConstantProto* mutable_constant(int index);
  inline ::rec::gui::ConstantProto* add_constant();
  inline const ::google::protobuf::RepeatedPtrField< ::rec::gui::ConstantProto >&
      constant() const;
  inline ::google::protobuf::RepeatedPtrField< ::rec::gui::ConstantProto >*
      mutable_constant();

  // @@protoc_insertion_point(class_scope:rec.gui.ConstantProtos)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rec::gui::ConstantProto > constant_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fgui_2fproto_2fConstants_2eproto();
  friend void protobuf_AssignDesc_rec_2fgui_2fproto_2fConstants_2eproto();
  friend void protobuf_ShutdownFile_rec_2fgui_2fproto_2fConstants_2eproto();

  void InitAsDefaultInstance();
  static ConstantProtos* default_instance_;
};
// ===================================================================


// ===================================================================

// ConstantProto

// optional string name = 1;
inline bool ConstantProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConstantProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConstantProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ConstantProto::name() const {
  return *name_;
}
inline void ConstantProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ConstantProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ConstantProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConstantProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ConstantProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConstantProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional double value = 2;
inline bool ConstantProto::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstantProto::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConstantProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConstantProto::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double ConstantProto::value() const {
  return value_;
}
inline void ConstantProto::set_value(double value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ConstantProtos

// repeated .rec.gui.ConstantProto constant = 1;
inline int ConstantProtos::constant_size() const {
  return constant_.size();
}
inline void ConstantProtos::clear_constant() {
  constant_.Clear();
}
inline const ::rec::gui::ConstantProto& ConstantProtos::constant(int index) const {
  return constant_.Get(index);
}
inline ::rec::gui::ConstantProto* ConstantProtos::mutable_constant(int index) {
  return constant_.Mutable(index);
}
inline ::rec::gui::ConstantProto* ConstantProtos::add_constant() {
  return constant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rec::gui::ConstantProto >&
ConstantProtos::constant() const {
  return constant_;
}
inline ::google::protobuf::RepeatedPtrField< ::rec::gui::ConstantProto >*
ConstantProtos::mutable_constant() {
  return &constant_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gui
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fgui_2fproto_2fConstants_2eproto__INCLUDED
