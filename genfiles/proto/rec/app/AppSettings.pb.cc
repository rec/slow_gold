// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rec/app/AppSettings.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace app {

namespace {

const ::google::protobuf::Descriptor* AppSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rec_2fapp_2fAppSettings_2eproto() {
  protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rec/app/AppSettings.proto");
  GOOGLE_CHECK(file != NULL);
  AppSettings_descriptor_ = file->message_type(0);
  static const int AppSettings_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettings, last_update_finished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettings, registered_),
  };
  AppSettings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppSettings_descriptor_,
      AppSettings::default_instance_,
      AppSettings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppSettings));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rec_2fapp_2fAppSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppSettings_descriptor_, &AppSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rec_2fapp_2fAppSettings_2eproto() {
  delete AppSettings::default_instance_;
  delete AppSettings_reflection_;
}

void protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031rec/app/AppSettings.proto\022\007rec.app\"F\n\013"
    "AppSettings\022\034\n\024last_update_finished\030\001 \001("
    "\003\022\031\n\nregistered\030\002 \001(\010:\005false", 108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rec/app/AppSettings.proto", &protobuf_RegisterTypes);
  AppSettings::default_instance_ = new AppSettings();
  AppSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rec_2fapp_2fAppSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rec_2fapp_2fAppSettings_2eproto {
  StaticDescriptorInitializer_rec_2fapp_2fAppSettings_2eproto() {
    protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto();
  }
} static_descriptor_initializer_rec_2fapp_2fAppSettings_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int AppSettings::kLastUpdateFinishedFieldNumber;
const int AppSettings::kRegisteredFieldNumber;
#endif  // !_MSC_VER

AppSettings::AppSettings()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AppSettings::InitAsDefaultInstance() {
}

AppSettings::AppSettings(const AppSettings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AppSettings::SharedCtor() {
  _cached_size_ = 0;
  last_update_finished_ = GOOGLE_LONGLONG(0);
  registered_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppSettings::~AppSettings() {
  SharedDtor();
}

void AppSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppSettings_descriptor_;
}

const AppSettings& AppSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto();  return *default_instance_;
}

AppSettings* AppSettings::default_instance_ = NULL;

AppSettings* AppSettings::New() const {
  return new AppSettings;
}

void AppSettings::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_update_finished_ = GOOGLE_LONGLONG(0);
    registered_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 last_update_finished = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_update_finished_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_registered;
        break;
      }
      
      // optional bool registered = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_registered:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &registered_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AppSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 last_update_finished = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->last_update_finished(), output);
  }
  
  // optional bool registered = 2 [default = false];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->registered(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AppSettings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 last_update_finished = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->last_update_finished(), target);
  }
  
  // optional bool registered = 2 [default = false];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->registered(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AppSettings::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 last_update_finished = 1;
    if (has_last_update_finished()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_update_finished());
    }
    
    // optional bool registered = 2 [default = false];
    if (has_registered()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppSettings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppSettings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppSettings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppSettings::MergeFrom(const AppSettings& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_last_update_finished(from.last_update_finished());
    }
    if (from._has_bit(1)) {
      set_registered(from.registered());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppSettings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppSettings::CopyFrom(const AppSettings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppSettings::IsInitialized() const {
  
  return true;
}

void AppSettings::Swap(AppSettings* other) {
  if (other != this) {
    std::swap(last_update_finished_, other->last_update_finished_);
    std::swap(registered_, other->registered_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppSettings_descriptor_;
  metadata.reflection = AppSettings_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace app
}  // namespace rec

// @@protoc_insertion_point(global_scope)
