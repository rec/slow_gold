// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rec/app/AppSettings.proto

#ifndef PROTOBUF_rec_2fapp_2fAppSettings_2eproto__INCLUDED
#define PROTOBUF_rec_2fapp_2fAppSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rec {
namespace app {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto();
void protobuf_AssignDesc_rec_2fapp_2fAppSettings_2eproto();
void protobuf_ShutdownFile_rec_2fapp_2fAppSettings_2eproto();

class AppSettings;

enum AppSettings_Language {
  AppSettings_Language_DE = 0,
  AppSettings_Language_EN = 1,
  AppSettings_Language_ES = 2,
  AppSettings_Language_FR = 3,
  AppSettings_Language_ID = 4,
  AppSettings_Language_FIRST = 0,
  AppSettings_Language_LAST = 4,
  AppSettings_Language_NONE = -1
};
bool AppSettings_Language_IsValid(int value);
const AppSettings_Language AppSettings_Language_Language_MIN = AppSettings_Language_NONE;
const AppSettings_Language AppSettings_Language_Language_MAX = AppSettings_Language_ID;
const int AppSettings_Language_Language_ARRAYSIZE = AppSettings_Language_Language_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppSettings_Language_descriptor();
inline const ::std::string& AppSettings_Language_Name(AppSettings_Language value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppSettings_Language_descriptor(), value);
}
inline bool AppSettings_Language_Parse(
    const ::std::string& name, AppSettings_Language* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppSettings_Language>(
    AppSettings_Language_descriptor(), name, value);
}
// ===================================================================

class AppSettings : public ::google::protobuf::Message {
 public:
  AppSettings();
  virtual ~AppSettings();

  AppSettings(const AppSettings& from);

  inline AppSettings& operator=(const AppSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppSettings& default_instance();

  void Swap(AppSettings* other);

  // implements Message ----------------------------------------------

  AppSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppSettings& from);
  void MergeFrom(const AppSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppSettings_Language Language;
  static const Language DE = AppSettings_Language_DE;
  static const Language EN = AppSettings_Language_EN;
  static const Language ES = AppSettings_Language_ES;
  static const Language FR = AppSettings_Language_FR;
  static const Language ID = AppSettings_Language_ID;
  static const Language FIRST = AppSettings_Language_FIRST;
  static const Language LAST = AppSettings_Language_LAST;
  static const Language NONE = AppSettings_Language_NONE;
  static inline bool Language_IsValid(int value) {
    return AppSettings_Language_IsValid(value);
  }
  static const Language Language_MIN =
    AppSettings_Language_Language_MIN;
  static const Language Language_MAX =
    AppSettings_Language_Language_MAX;
  static const int Language_ARRAYSIZE =
    AppSettings_Language_Language_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Language_descriptor() {
    return AppSettings_Language_descriptor();
  }
  static inline const ::std::string& Language_Name(Language value) {
    return AppSettings_Language_Name(value);
  }
  static inline bool Language_Parse(const ::std::string& name,
      Language* value) {
    return AppSettings_Language_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 last_update_finished = 1;
  inline bool has_last_update_finished() const;
  inline void clear_last_update_finished();
  static const int kLastUpdateFinishedFieldNumber = 1;
  inline ::google::protobuf::int64 last_update_finished() const;
  inline void set_last_update_finished(::google::protobuf::int64 value);

  // optional bool registered = 2 [default = false];
  inline bool has_registered() const;
  inline void clear_registered();
  static const int kRegisteredFieldNumber = 2;
  inline bool registered() const;
  inline void set_registered(bool value);

  // optional .rec.app.AppSettings.Language language = 3 [default = EN];
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 3;
  inline ::rec::app::AppSettings_Language language() const;
  inline void set_language(::rec::app::AppSettings_Language value);

  // optional bool windows_registered = 4 [default = false];
  inline bool has_windows_registered() const;
  inline void clear_windows_registered();
  static const int kWindowsRegisteredFieldNumber = 4;
  inline bool windows_registered() const;
  inline void set_windows_registered(bool value);

  // @@protoc_insertion_point(class_scope:rec.app.AppSettings)
 private:
  inline void set_has_last_update_finished();
  inline void clear_has_last_update_finished();
  inline void set_has_registered();
  inline void clear_has_registered();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_windows_registered();
  inline void clear_has_windows_registered();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 last_update_finished_;
  int language_;
  bool registered_;
  bool windows_registered_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_rec_2fapp_2fAppSettings_2eproto();
  friend void protobuf_AssignDesc_rec_2fapp_2fAppSettings_2eproto();
  friend void protobuf_ShutdownFile_rec_2fapp_2fAppSettings_2eproto();

  void InitAsDefaultInstance();
  static AppSettings* default_instance_;
};
// ===================================================================


// ===================================================================

// AppSettings

// optional int64 last_update_finished = 1;
inline bool AppSettings::has_last_update_finished() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppSettings::set_has_last_update_finished() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppSettings::clear_has_last_update_finished() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppSettings::clear_last_update_finished() {
  last_update_finished_ = GOOGLE_LONGLONG(0);
  clear_has_last_update_finished();
}
inline ::google::protobuf::int64 AppSettings::last_update_finished() const {
  return last_update_finished_;
}
inline void AppSettings::set_last_update_finished(::google::protobuf::int64 value) {
  set_has_last_update_finished();
  last_update_finished_ = value;
}

// optional bool registered = 2 [default = false];
inline bool AppSettings::has_registered() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppSettings::set_has_registered() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppSettings::clear_has_registered() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppSettings::clear_registered() {
  registered_ = false;
  clear_has_registered();
}
inline bool AppSettings::registered() const {
  return registered_;
}
inline void AppSettings::set_registered(bool value) {
  set_has_registered();
  registered_ = value;
}

// optional .rec.app.AppSettings.Language language = 3 [default = EN];
inline bool AppSettings::has_language() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppSettings::set_has_language() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppSettings::clear_has_language() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppSettings::clear_language() {
  language_ = 1;
  clear_has_language();
}
inline ::rec::app::AppSettings_Language AppSettings::language() const {
  return static_cast< ::rec::app::AppSettings_Language >(language_);
}
inline void AppSettings::set_language(::rec::app::AppSettings_Language value) {
  assert(::rec::app::AppSettings_Language_IsValid(value));
  set_has_language();
  language_ = value;
}

// optional bool windows_registered = 4 [default = false];
inline bool AppSettings::has_windows_registered() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppSettings::set_has_windows_registered() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppSettings::clear_has_windows_registered() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppSettings::clear_windows_registered() {
  windows_registered_ = false;
  clear_has_windows_registered();
}
inline bool AppSettings::windows_registered() const {
  return windows_registered_;
}
inline void AppSettings::set_windows_registered(bool value) {
  set_has_windows_registered();
  windows_registered_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace app
}  // namespace rec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rec::app::AppSettings_Language>() {
  return ::rec::app::AppSettings_Language_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rec_2fapp_2fAppSettings_2eproto__INCLUDED
